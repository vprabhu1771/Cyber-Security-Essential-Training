Automatically granting USB file access permission and pressing "Yes" programmatically involves simulating UI interactions, which can be quite complex and can require specialized tools or libraries for Android automation. One such tool is Appium, a popular automation framework for mobile applications.

Here's a general outline of how you might approach this using Appium and Python:

1. Install Appium: Follow the instructions on the [Appium website](http://appium.io/) to install Appium on your system.

2. Set Up Appium and Start a Session: Use Appium to start a session and connect to your Android device.

3. Locate and Interact with UI Elements: Use Appium's element locating methods to find the relevant UI elements (such as the "Allow" button) on the screen and simulate interactions like tapping the "Allow" button.

4. Grant Permission and Handle Dialogs: Use Appium to grant the USB file access permission and simulate tapping the "Yes" button on the permission dialog.

Please note that this process can be complex and may require additional configuration and setup. Additionally, automating UI interactions like this might not always be reliable, as the UI structure and element IDs can vary between Android devices and versions.

Here's a simplified example using Appium to simulate clicking the "Allow" button on a permission dialog:

```python
from appium import webdriver

# Set up the Appium driver
desired_caps = {
    'platformName': 'Android',
    'deviceName': 'your_device_name',
    'appPackage': 'com.android.package',  # Replace with the package name of the settings app
    'appActivity': 'com.android.settings.Settings',  # Replace with the activity to open the settings app
}
driver = webdriver.Remote('http://localhost:4723/wd/hub', desired_caps)

# Find and click the "Allow" button
allow_button = driver.find_element_by_id('com.android.package:id/allow_button_id')
allow_button.click()

# Close the Appium session
driver.quit()
```

Keep in mind that this example is quite simplified and you'll need to adjust the code to match your specific use case, including finding the correct UI elements and handling potential issues.

Before attempting to automate UI interactions, I recommend reviewing the Appium documentation and guides to understand how to set up and use Appium effectively for your specific scenario. Additionally, always exercise caution and ensure you have the necessary permissions and knowledge before automating interactions on your device.